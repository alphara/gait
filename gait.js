var dnn = require('dnn');


// Eduard
var eduard = [
 [ 256, 40, 0, 16448, 42, 258, 296, 1280, 0, 16392, 770, 320, 1, 1088, 2, 2096, 515, 260, 4, 24, 32, 2304, 0, 8, 4, 24, 32, 2304, 0, 8, 290, 288, 144, 0, 70, 0, 290, 288, 144, 0, 70, 0, 144, 256, 8, 16514, 0, 1024, 856, 388, 0, 1, 16, 1024, 1318, 128, 0, 0, 16, 1056, 16, 128, -448, 0, 128, 0, 386, -2752, -819, 256, 130, 0, ],
 [ 100, 0, 66, 17824, 19, 512, 24, 0, 64, 2049, 37, 32, 258, 18, 0, 3328, 2650, 264, 768, 32, 0, 7192, 32, 40, 768, 32, 0, 7192, 32, 40, 640, 0, -2536, 16425, 64, 0, 640, 0, -2536, 16425, 64, 0, 1568, 64, 1664, 8, 270, 2112, 1568, 64, 1664, 8, 270, 2112, 1026, 16, 545, 0, 0, 8, 512, 64, -1024, 3072, 0, 176, 640, 448, -984, 1024, 520, 1088, ],
 [ 512, 384, 128, 16416, 1024, 292, 0, 264, 640, 16386, 0, 129, 0, 0, 0, 16, 514, 33, 256, 1280, 0, 264, 96, 2, 256, 1280, 0, 264, 96, 2, 512, 0, 34, 288, 256, 132, 512, 0, 34, 288, 256, 132, 256, 0, 36, 16384, 66, 0, 256, 0, 36, 16384, 66, 0, 0, 0, 16, 5122, 0, 0, 0, 0, 16, 5122, 0, 0, 1024, 0, 516, 0, 64, 1024, ],
 [ 32, 400, 64, 16385, 512, 0, 0, 1024, 512, 132, 66, 0, 0, 1024, 512, 132, 66, 0, 264, 1026, 512, 5120, 132, 9, 264, 1026, 512, 5120, 132, 9, 0, 416, 64, 2, 16, 256, 0, 416, 64, 2, 16, 256, 256, 1024, 0, 16408, 0, 258, 256, 1024, 0, 16408, 0, 258, 1552, 32, 322, 64, 0, 512, 1552, 32, 322, 64, 0, 512, 0, 0, 525, 8, 69, 0, ],
];

// Dasha
var dasha = [
 [4553, 384, -1500, 16404, 4, 0, 520, 512, 12, 16400, 273, 2, 0, 1032, 0, 2048, 2, 272, 776, 332, 4, 2048, 2560, 0, 776, 332, 4, 2048, 2560, 0, 512, 36, 712, 2050, 2176, 64, 512, 36, 712, 2050, 2176, 64, 72, 288, 32, 15872, 4113, 4, 4, 0, 0, 2336, 6336, 0, 32, 128, 160, 4448, 6224, 0, 1280, 0, 160, 16, 4128, 2048, 2309, 0, 0, 0, 6146, 74, ],
 [576, 20, -1536, 16384, 4224, 16, 2090, 17, 2, 16656, 4608, 4, 2048, 2368, 0, 16384, 4096, 0, 3, 0, 1024, 16455, 256, 0, 256, -1840, 128, 16640, 512, 260, 0, -2048, 517, 24, 256, 1312, 4, 66, 16, 0, 0, 0, 2561, 1024, 257, 14336, 5640, 2, 1056, 2050, 581, 512, 6144, 1026, 0, 384, 528, 4116, 0, 128, 128, 1154, 0, 1600, 257, 256, 788, 144, 1168, 0, 4608, 258, ],
 [384, 390, 2048, 16392, 2052, 1056, 8, -5120, 0, 17408, 4104, 16, 1284, 8, -832, 16456, 0, 144, 2052, 0, 2, 1, 33, 16, 2052, 0, 2, 1, 33, 16, 1040, -2048, 0, 0, 2050, 0, 8, 128, -1490, 12296, 2, 13, 384, 0, -494, 12288, 18, 4, 256, 32, 1024, 4096, 12304, 2048, 2, 0, 0, 4097, 4160, 1040, 3, 1372, 36, 2048, 4224, 512, 772, 0, 1036, 6146, 6153, 0, ],
 [257, 2212, 1284, 16390, 4096, 4, 0, 416, 2641, 17472, 2080, 2144, 68, 34, 1024, 16384, 2056, 0, 1539, 16, 36, 16392, 0, 4112, 1539, 16, 36, 16392, 0, 4112, 0, 0, 2, 16456, 1536, 4096, 512, 3284, 18, 14464, 3072, 64, 82, 44, 72, 2048, 32, 512, 1088, 512, 192, 32, 17, 2048, 256, -2816, -1792, 8, 7168, 0, 520, 512, -1470, 2048, 1, 17, 1536, 2048, -960, 4096, 4098, 832, ],
];

function normalize(arr) {
  for (i in arr) {
    for (j in arr[i]) {
      if (j % 6 === 0) { }
      if (j % 6 == 0) { }
    }
  }
  return arr;
};

function lens(arr) {
  for (i in arr) {
    console.log('len:', arr[i].length);
  }
  return arr;
};

normalize(eduard);
normalize(dasha);
lens(eduard);
lens(dasha);

// console.log('eduard[0]:', eduard[0]);

var x = [
  eduard[0],
  eduard[1],
  eduard[2],
  dasha[0],
  dasha[1],
  dasha[2],
];

var y =  [[1],
          [1],
          [1],
          [0],
          [0],
          [0]];

var a = [
  eduard[3],
  dasha[3]
];

function multiLayerPerceptron() {
  console.log('Multi Layer Perceptron');
  console.log('');
  var mlp = new dnn.MLP({
      'input' : x,
      'label' : y,
      'n_ins' : 72,
      'n_outs' : 1,
      'hidden_layer_sizes' : [10,20,6]
  });

  mlp.set('log level',1); // 0 : nothing, 1 : info, 2 : warning.

  mlp.train({
      'lr' : 0.6,
      'epochs' : 20000
  });

  console.log(mlp.predict(a));
  console.log('');
}

function deepBeliefNetwork() {
  console.log('Deep Belief Network');
  console.log('');
  var pretrain_lr = 0.6, pretrain_epochs = 900, k = 1, finetune_lr = 0.6, finetune_epochs = 500;

  var dbn = new dnn.DBN({
      'input' : x,
      'label' : y,
      'n_ins' : 72,
      'n_outs' : 1,
      'hidden_layer_sizes' : [10,12,11,8,6,4]
  });

  dbn.set('log level',1); // 0 : nothing, 1 : info, 2 : warning.

  // Pre-Training using using RBM
  dbn.pretrain({
      'lr' : pretrain_lr,
      'k' : k, // RBM CD-k.
      'epochs' : pretrain_epochs
  });

  // Fine-Tuning dbn using mlp backpropagation.
  dbn.finetune({
      'lr' : finetune_lr,
      'epochs' : finetune_epochs
  });

  console.log(dbn.predict(a));
  console.log('');
}

multiLayerPerceptron();
// deepBeliefNetwork();

